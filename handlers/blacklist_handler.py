from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from telethon import TelegramClient
from utils.telegram_utils import get_user_info
from utils.json_utils import load_json, save_json, add_to_blacklist
from utils.logger import logger
from config import BLACKLIST_FILE, ADMINS_FILE, CONTACTS_FILE

router = Router()

@router.message(Command("blacklist"))
async def blacklist_command(message: Message):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ admins.json
        admins = load_json(ADMINS_FILE)
        is_admin = False
        for group_admins in admins.values():
            if str(message.from_user.id) in group_admins:
                is_admin = True
                break
                
        if not is_admin:
            await message.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return
            
        # –ü–æ–ª—É—á–∞–µ–º ID –∏–ª–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
        args = message.text.split()
        if len(args) != 2:
            await message.reply(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /blacklist <ID –∏–ª–∏ @username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è>"
            )
            return
            
        user_input = args[1].strip()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        contacts = load_json(CONTACTS_FILE)
        
        # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö
        user_data = None
        user_id = None
        
        # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω ID
        if user_input.isdigit() or (user_input.startswith('-') and user_input[1:].isdigit()):
            user_id = str(user_input)
            if user_id in contacts:
                user_data = contacts[user_id]
        # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω username
        elif user_input.startswith('@'):
            username = user_input[1:]  # –£–±–∏—Ä–∞–µ–º @
            # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username –≤ –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö
            for contact_id, contact_data in contacts.items():
                if contact_data.get('username', '').lower() == username.lower():
                    user_data = contact_data
                    user_id = contact_id
                    break
        else:
            await message.reply(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –∏–ª–∏ username.\n"
                "ID –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º, –∞ username –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å @"
            )
            return
            
        if not user_data:
            await message.reply(
                "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≤–∞—à–∏—Ö –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö.\n"
                "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –≤–∞—à–∏—Ö –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö."
            )
            return
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤ —á–µ—Ä–Ω–æ–º –ª–∏ —Å–ø–∏—Å–∫–µ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        blacklist = load_json(BLACKLIST_FILE)
        if user_id in blacklist:
            await message.reply("‚ùå –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ.")
            return
            
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
        if add_to_blacklist(BLACKLIST_FILE, user_data):
            first_name = user_data.get('first_name', '')
            last_name = user_data.get('last_name', '')
            username = user_data.get('username', '–ù–µ—Ç username')
            
            await message.reply(
                f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫:\n\n"
                f"üë§ {first_name} {last_name}\n"
                f"üîó @{username}\n"
                f"üÜî {user_id}"
            )
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫")
        else:
            await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫.")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫.")

@router.message(Command("blacklist_list"))
async def show_blacklist(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ admins.json
        admins = load_json(ADMINS_FILE)
        is_admin = False
        for group_admins in admins.values():
            if str(message.from_user.id) in group_admins:
                is_admin = True
                break
                
        if not is_admin:
            await message.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return
            
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
        blacklist = load_json(BLACKLIST_FILE)
        
        if not blacklist:
            await message.reply("üìù –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç.")
            return
            
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        response = "‚õîÔ∏è –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫:\n\n"
        for user_id, user_data in blacklist.items():
            first_name = user_data.get('first_name', '')
            last_name = user_data.get('last_name', '')
            username = user_data.get('username', '–ù–µ—Ç username')
            added_date = user_data.get('added_date', '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')
            
            response += (
                f"üë§ {first_name} {last_name}\n"
                f"üîó @{username}\n"
                f"üÜî {user_id}\n"
                f"üìÖ –î–æ–±–∞–≤–ª–µ–Ω: {added_date}\n\n"
            )
            
        # –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏, –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
        if len(response) > 4096:
            for x in range(0, len(response), 4096):
                await message.reply(response[x:x+4096])
        else:
            await message.reply(response)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞: {e}")
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.") 